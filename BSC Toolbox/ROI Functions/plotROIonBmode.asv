function [] = plotROIonBmode(varargin)
%PLOTROIONBMODE Plot ROI on b-mode.
% Usage: plotROIonBmode(vol, roi, <bmode_idx>, <cscan_idx})

% INPUTS:
%   vol.
%       data = 3D rf data (dim 1 = z, dim 2 = x, dim 3 = y)
%       x = position of each data voxel in x [meters]
%       y = position of each data voxel in y [meters]
%       z = position of each data voxel in z [meters]
%   roi.
%       pos_x = initial position of roi in x [meters]
%       pos_y = initial position of roi in y [meters]
%       pos_z = initial position of roi in z [meters]
%       len_x = length of roi in x [meters]
%       len_y = length of roi in x [meters]
%       len_z = length of roi in x [meters]
%   bmode_idx (optional) = index of b-mode to plot
%                         (bscan_idx should be an index along dim 3)
%   cscan_idx (optional) = index of c-scan to plot
%                          (cscan_idx should be an index along dim 2)

% 02/17/2021 (THL): Modified for the case when we only have one plane.
% 03/26/2021 (THL): Fixed the zoomed in plots when the initial ROI are not
%                   located at the start of the axes.

%% Initialize inputs
vol = varargin{1};
roi = varargin{2};
if nargin < 3
    bmode_idx = round(length(vol.y)/2);
    cscan_idx = round(length(vol.z)/2);
elseif nargin == 3
    bmode_idx = varargin{3};
elseif nargin == 4
    bmode_idx = varargin{3};
    cscan_idx = varargin{4};
else
    error('Incorrect number of arguments');
end

% Convert to mm
vol.x = vol.x * 1e3;
vol.y = vol.y * 1e3;
vol.z = vol.z * 1e3;
roi.pos_x = roi.pos_x * 1e3;
roi.pos_y = roi.pos_y * 1e3;
roi.pos_z = roi.pos_z * 1e3;
roi.len_x = roi.len_x * 1e3;
roi.len_y = roi.len_y * 1e3;
roi.len_z = roi.len_z * 1e3;

%% Get full length of ROI region
roi_region_x_len = (roi.pos_x(end)+roi.len_x) - roi.pos_x(1);
roi_region_y_len = (roi.pos_y(end)+roi.len_y) - roi.pos_y(1);
roi_region_z_len = (roi.pos_z(end)+roi.len_z) - roi.pos_z(1);

%% Create B-mode Image and C-scan Image
bmode_img = 20*log10(abs(hilbert(vol.data(:,:,bmode_idx))));
cscan_img = 20*log10(abs(hilbert(squeeze(vol.data(cscan_idx,:,:)))));

bmode_img = bmode_img - max(bmode_img(:));
cscan_img = cscan_img - max(cscan_img(:));
%% Plot B-mode and C-scan

% b-mode
subplot(2,2,1)
imagesc(vol.x, vol.z, bmode_img,[-60,0]); colormap gray; axis image;
title('B-mode'); xlabel('X [mm]'); ylabel('Z [mm]');

hold on;
% rectangle('Position',...
%     [roi.pos_x(1),...
%     roi.pos_z(1),...
%     roi_region_x_len,...
%     roi_region_z_len],...
%     'LineWidth',2,...
%     'EdgeColor','r');
rectangle('Position',...
    [roi.pos_x(1),...
    roi.pos_z(1),...
    roi.len_x,...
    roi.len_z],...
    'LineWidth',2,...
    'EdgeColor','y');
rectangle('Position',...
    [roi.pos_x(2),...
    roi.pos_z(1),...
    roi.len_x,...
    roi.len_z],...
    'LineWidth',2,...
    'EdgeColor','b');
rectangle('Position',...
    [roi.pos_x(1),...
    roi.pos_z(2),...
    roi.len_x,...
    roi.len_z],...
    'LineWidth',2,...
    'EdgeColor','g');
hold off;

% zoomed in b-mode
subplot(2,2,3)
imagesc(vol.x, vol.z, bmode_img,[-60,0]); colormap gray; axis image;
title('B-mode'); xlabel('X [mm]'); ylabel('Z [mm]');

hold on;
rectangle('Position',...
    [roi.pos_x(1),...
    roi.pos_z(1),...
    roi_region_x_len,...
    roi_region_z_len],...
    'LineWidth',2,...
    'EdgeColor','r');
rectangle('Position',...
    [roi.pos_x(1),...
    roi.pos_z(1),...
    roi.len_x,...
    roi.len_z],...
    'LineWidth',2,...
    'EdgeColor','y');
rectangle('Position',...
    [roi.pos_x(2),...
    roi.pos_z(1),...
    roi.len_x,...
    roi.len_z],...
    'LineWidth',2,...
    'EdgeColor','b');
rectangle('Position',...
    [roi.pos_x(1),...
    roi.pos_z(2),...
    roi.len_x,...
    roi.len_z],...
    'LineWidth',2,...
    'EdgeColor','g');
hold off;

xlim([roi.pos_x(1),roi.pos_x(1)+2*roi.len_x]);
ylim([roi.pos_z(1),roi.pos_z(1)+2*roi.len_z]);

% c-scan
subplot(2,2,2);
imagesc(vol.x, vol.y, cscan_img,[-45,0]); colormap gray; axis image;
title('C-scan'); xlabel('X [mm]'); ylabel('Y [mm]');

hold on;
rectangle('Position',...
    [roi.pos_x(1),...
    roi.pos_y(1),...
    roi_region_x_len,...
    roi_region_y_len],...
    'LineWidth',2,...
    'EdgeColor','r');
rectangle('Position',...
    [roi.pos_x(1),...
    roi.pos_y(1),...
    roi.len_x,...
    roi.len_y],...
    'LineWidth',2,...
    'EdgeColor','y');
rectangle('Position',...
    [roi.pos_x(2),...
    roi.pos_y(1),...
    roi.len_x,...
    roi.len_y],...
    'LineWidth',2,...
    'EdgeColor','b');
if length(roi.pos_y)>1
    rectangle('Position',...
        [roi.pos_x(1),...
        roi.pos_y(2),...
        roi.len_x,...
        roi.len_y],...
        'LineWidth',2,...
        'EdgeColor','g');
end
hold off;

% zoomed in c-scan
subplot(2,2,4);
imagesc(vol.x, vol.y, cscan_img,[-45,0]); colormap gray; axis image;
title('C-scan'); xlabel('X [mm]'); ylabel('Y [mm]');

hold on;
rectangle('Position',...
    [roi.pos_x(1),...
    roi.pos_y(1),...
    roi_region_x_len,...
    roi_region_y_len],...
    'LineWidth',2,...
    'EdgeColor','r');
rectangle('Position',...
    [roi.pos_x(1),...
    roi.pos_y(1),...
    roi.len_x,...
    roi.len_y],...
    'LineWidth',2,...
    'EdgeColor','y');
rectangle('Position',...
    [roi.pos_x(2),...
    roi.pos_y(1),...
    roi.len_x,...
    roi.len_y],...
    'LineWidth',2,...
    'EdgeColor','b');
if length(roi.pos_y)>1
    rectangle('Position',...
        [roi.pos_x(1),...
        roi.pos_y(2),...
        roi.len_x,...
        roi.len_y],...
        'LineWidth',2,...
        'EdgeColor','g');
end
hold off;

xlim([roi.pos_x(1),roi.pos_x(1)+2*roi.len_x]);
ylim([roi.pos_y(1),roi.pos_y(1)+2*roi.len_y]);